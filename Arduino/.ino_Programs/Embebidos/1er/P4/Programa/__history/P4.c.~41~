#include <16F877.h>
#fuses NOWDT, XT
#use delay (clock=4M)
#byte TRISA=0x85
#byte PORTA=0x05
#byte TRISB=0x86
#byte PORTB=0x06
#define use_portb_kbd true
#define button PIN_A0
#use fast_io(A)
#use fast_io(B)

#include <kbd4x4.c>
#include <lcd.c>
#include <stdio.h>
#include <string.h>

void show1(float Value)
{
    printf(lcd_putc, "%f", value);
    delay_ms(5000);
}

float ingresar()
{
   float temp, value=0;
   char c; 
   int X3 = 1;
   c = kbd_getc();
   printf(lcd_putc, c);
   While( c =='\0' || c >= 58 ||c <= 47)
   {
      delay_us(10);
      lcd_gotoxy(1,2);
      show1(value);
      c = kbd_getc();
      if( c !='\0' && c <= 58 && c >= 47){
         
         lcd_gotoxy(X3,2);
         printf(lcd_putc, c);
         temp = c + '0';
         value = (value*10) + temp;
         X3++;
      }
      if(c == '#')
         break;     
   }
   return value;
}

void menu(char OPC)
{
   float promedio = 0, X1=0, Y1=0, Z1=0;
   lcd_gotoxy(1,2);
    switch(OPC)
  {
    case '0':
         float Y3 = 1;
         show1(Y3);
         for(unsigned int cont   =  0;   cont  <=   15;   cont++)
         {
            lcd_gotoxy(cont+1,2);
            show1(Y3);//funcion para mostrar valor en PuertoC
         }
         break;
    case '1':
         X1 = ingresar();
         Y1 = ingresar();
         Z1 = ingresar();
         promedio = (X1 + Y1 + Z1)/3;
         show1(promedio);
         break;
    case '2':
         X1 = ingresar();
         Y1 = ingresar();
         Z1 = ingresar();
         show1(0);
         if(X1  >= Y1  && X1  >= Z1 )
           Show1(X1);
         else
             if(Y1  >= Z1)
                show1(Y1);
             else
                show1(Z1);
         break;
    case '3':
         printf(lcd_putc, "00");
         delay_ms(500);
         for(unsigned int cont_1 = 0; cont_1 <= 2; cont_1++)
           { 
             lcd_gotoxy(1,2);
             printf(lcd_putc, "%d", cont_1);           
             for(unsigned int cont_2 = 0; cont_2 < 10; cont_2+=2)
             {
               lcd_gotoxy(2,2);
               printf(lcd_putc, "%d", cont_2);
               delay_ms(300);
             }
           }
         break;
    case '4':
         X1 = ingresar();
         Y1 = ingresar();
         lcd_gotoxy(1,2);
         if(X1 <= Y1 )//son iguales innecesario seguir
         {
            show1(X1);
            break;
         }
            while(X1 <= Y1)//como x es menor se recquiere incrementar
            {
               show1(X1);
               X1 += 1;
            }
         break;
    case '5':
         X1 = ingresar();
         Y1 = ingresar();
         lcd_gotoxy(1,2);
         float Va1= X1*X1, Va2 = Y1*2;//& 0x00011111;   
         if( Va1< Va2)
         {        
             printf(lcd_putc, "-%f",Va2-Va1);
         }
         else
         {
            show1(Va1 - Va2);
         }
         break;
    default:
         show1(0xFF);//FF si no corresponde a algun caso anterior
         break;
  }
}

void main()
{
   char Opc = '\0';
   set_tris_d(0); 
   lcd_init();
   kbd_init();             //inicializacion del teclado
   port_b_pullups(true);   //porteccion para el teclado Hex
   TRISA = TRISB = 0xFF;
   PORTB = PORTA  = 0;
   
   lcd_gotoxy(1,2);
   while(!input(button))
   { 
      lcd_gotoxy(8,1);
      printf(lcd_putc, "Menu");
      printf(lcd_putc, "0.Rota  1.Prome");
      delay_ms(1000);
      lcd_gotoxy(1,2);
      printf(lcd_putc, "2.NuMa  3.Pares");
      delay_ms(1000);
      lcd_gotoxy(1,2);
      printf(lcd_putc, "4.X a Y  5.Ecua");
      delay_ms(1000);
      lcd_putc("\f");
   }
   Opc=kbd_getc();
   while(Opc =='\0')
   { 
     delay_us(10);
     Opc = kbd_getc();
   }
   menu(Opc);//llama a la funcion menu.
   lcd_putc("\f");
}
