#include <16F877.h>
#include <kbd4x4.c>
#include <lcd.c>
#include <stdio.h>
#include <string.h>

#fuses NOWDT, XT
#use delay (clock=4M)
#byte TRISA=0x85
#byte PORTA=0x05
#byte TRISB=0x86
#byte PORTB=0x06



#define button PIN_A0


#use fast_io(A)
#use fast_io(B)


void show1(float Value)
{
    printf(lcd_putc, "%f", value);
    delay_ms(5000);
    lcd_putc("\f");
}

char enter()
{
   char c='\0';
   c=kbd_getc();
   while(c=='\0')
   { 
     delay_us(10);
     c = kbd_getc();
   }
   return c;
}

void ingresar(float& value)
{
   float temp;
   char c; 
   int X3 = 1;
   c = kbd_getc();
   printf(lcd_putc, c);
   While( c =='\0' || c >= 58 ||c <= 47)
   {
      lcd_gotoxy(1,2);
      printf(lcd_putc, "%f", value);
      c = kbd_getc();
      if( c !='\0' && c >= 58 && c <= 47){
         
         lcd_gotoxy(X3,2);
         printf(lcd_putc, c);
         temp = c + '0';
         value = (value*10) + temp;
         X3++;
      }
      
      if(c == '#' )
         break;     
   }
}



void menu(char OPC)
{
   float promedio = 0, X1=0, Y1=0, Z1=0;

    switch(OPC)
  {
    case '0':
         byte X2=0x05;
         show1(X2);
         for(unsigned int cont   =  0;   cont  <=   15;   cont++)
         {
            rotate_right(&X2,1);
            show1(X2);//funcion para mostrar valor en PuertoC
         }
         break;
    case '1':
         ingresar(X1);
         ingresar(Y1);
         ingresar(Z1);
         promedio = (X1 + Y1 + Z1)/3;
         show1(promedio);
         break;
    case '2':
         ingresar(X1);
         ingresar(Y1);
         ingresar(Z1);
         show1(0);
         if(X1  >= Y1  && X1  >= Z1 )
           Show1(X1);
         else
             if(Y1  >= Z1)
                show1(Y1);
             else
                show1(Z1);
         break;
    case '3':
         lcd_gotoxy(7,2);
         printf(lcd_putc, "00");
         delay_ms(500);//creacion de un byte para una secuencia más sencilla
         for(unsigned int cont_1 = 0; cont_1 <= 2; cont_1++)
           { 
             lcd_gotoxy(7,2);
             printf(lcd_putc, "%d", cont_1);
             
             for(unsigned int cont_2 = 0; cont_2 < 10; cont_2+=2)
             {
               lcd_gotoxy(8,2);
               printf(lcd_putc, "%d", cont_2);
               delay_ms(300);
             }
             
           }
         break;
    case '4':
         ingresar(X1);
         ingresar(Y1);
         lcd_gotoxy(1,2);
         if(X1 == Y1)//son iguales innecesario seguir
         {
            show1(X1);
            break;
         }
         if(X1 > Y1)//se analiza cual es mayor para asi saber que secuencia tendra
         {
            while(X1 >= Y1)
            {
               show1(X1);//ya que x es mayor se requiere decrementar
               X1 -= 1;
            }
         }
         else
         {
            while(X1 <= Y1)//como x es menor se recquiere incrementar
            {
               show1(X1);
               X1 += 1;
            }
         }
         break;
    case '5':
         ingresar(X1);
         ingresar(Y1);
         
         float result = 0, Va1 = X1*X1, Va2 = Y1*2;//& 0x00011111;
        
         if( Va1 < Va2)
         {
             result = Va2 - Va1;
             lcd_gotoxy(1,2);
             printf(lcd_putc, "-%f",result);
         }
         else
         {
            result = Va1 - Va2;
            lcd_gotoxy(1,2);
            printf(lcd_putc, "%f",result);
         }
         show1(result);
         break;
    default:
         show1(0xFF);//FF si no corresponde a algun caso anterior
         break;
  }
}


void main()
{
   char Opc = '0';
   set_tris_d(0); 
   lcd_init();
   kbd_init();             //inicializacion del teclado
   port_b_pullups(true);   //porteccion para el teclado Hex
  
   TRISA = TRISB = 0xFF;
   PORTB = PORTA  = 0;
   lcd_gotoxy(8,1);
   printf(lcd_putc, "Menu");
   lcd_gotoxy(1,2);
   while(!input(button))
   { 
      printf(lcd_putc, "0.Rota  1.Prome");
      delay_ms(1000);
      printf(lcd_putc, "2.NuMa  3.Pares");
      delay_ms(1000);
      printf(lcd_putc, "4.X a Y  5.Ec");
      delay_ms(1000);
   }
   Opc = enter(); //se ingresa opcion de menu
   menu(Opc);//llama a la funcion menu.
}
